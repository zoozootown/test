{"version":3,"sources":["Constant.ts","Actions.ts","Menu.tsx","Header.tsx","MainWidthStyle.tsx","Article.tsx","PageNavigator.tsx","Utils.ts","NewArticles.tsx","App.tsx","PageManager.ts","Reducer.ts","serviceWorker.ts","index.tsx"],"names":["PropName","ARTICLE_DATA_URL","ActionType","HTTP_YOUTUBE_URL","HTTPS_YOUTUBE_URL","Header","to","src","alt","MainWidthStyle","props","className","style","width","children","Menu","optionDataList","i","push","MySelect","dispatch","useDispatch","articlesPerPage","useSelector","state","ARTICLES_PER_PAGE","onChange","e","target","name","type","UPDATE_DATA","payload","setArticlesPerPage","parseInt","value","id","map","val","key","Article","embedcode","ARTICLE_DATA","EMBEDCODE","dangerouslySetInnerHTML","__html","PageNavigator","previousPageNo","PREVIOUS_PAGE_NO","nextPageNo","NEXT_PAGE_NO","height","Utils","window","scroll","element","document","getElementById","scrollIntoView","title","path","sendAccessLog","error","console","log","twttr","widgets","load","NewArticles","activePageNo","useParams","ACTIVE_PAGE_NO","useEffect","scrollToTop","setTitle","location","pathname","hash","setActivePageNo","activeDataList","ACTIVE_ARTICLE_DATA_LIST","loadTwitter","articleData","index","App","fetch","then","response","json","articleDataList","feed","entry","item","$t","reverse","ARTICLE_DATA_LIST","setArticleDataList","exact","component","render","PageManagerFactory","articleDataListSize","newLoopPageManager","NormalPageManager","LoopPageManager","pageNo","lastPageNo","this","getLastPageNo","correctPageNo","Math","ceil","getArticlesPerPage","getActivePageNo","getActivePageFirstDataIndex","result","INITIAL_STATE","StateBuilder","changedPropNames","Set","Object","keys","filter","removeEmptyDataFilter","pageManager","newDefaultPageManager","length","getPreviousPageNo","getNextPageNo","slice","getActivePageLastDataIndex","httpToHttpsMapper","newArticleData","replace","Boolean","hostname","match","persistConfig","storage","whitelist","persistedReducer","persistReducer","action","build","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","pstore","persistStore","ReactDOM","loading","persistor","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d90cbe11.chunk.js","sourcesContent":["// propsとstateで利用するプロパティ名\r\nexport enum PropName {\r\n  ACTIVE_PAGE_NO = 'activePageNo',\r\n  PREVIOUS_PAGE_NO = 'previousPageNo',\r\n  NEXT_PAGE_NO = 'nextPageNo',\r\n\r\n  ARTICLES_PER_PAGE = 'articlesPerPage',\r\n\r\n  ARTICLE_DATA = 'articleData',\r\n  ARTICLE_DATA_LIST = 'articleDataList',\r\n  ACTIVE_ARTICLE_DATA_LIST = 'activeArticleDataList',\r\n\r\n  EMBEDCODE = 'embedcode' // データベースの列名(googleの仕様上アンダーバーが消える)\r\n}\r\n\r\nexport interface ArticleDataType {\r\n  [PropName.EMBEDCODE]: string;\r\n}\r\n\r\nexport const SPREADSHEET_ID: string =\r\n  '1jDoKicjNhz0ZOJRGP0K3Dw-4ioqcc1xsLyOYz0cM_rU';\r\n\r\nexport const ARTICLE_DATA_URL: string = getSpreadsheetURL(SPREADSHEET_ID);\r\n\r\nfunction getSpreadsheetURL(spreadsheetID: string): string {\r\n  return `https://spreadsheets.google.com/feeds/list/${spreadsheetID}/od6/public/values?alt=json`;\r\n}\r\n\r\nexport const HTTP_YOUTUBE_URL: string = 'http://youtube.com';\r\nexport const HTTPS_YOUTUBE_URL: string = 'https://youtube.com';\r\n","import { Action } from 'redux';\r\nimport { ArticleDataType, PropName } from './Constant';\r\nimport { StoreStateType } from './Reducer';\r\n\r\nexport enum ActionType {\r\n  UPDATE_DATA\r\n}\r\n\r\nexport type PayloadType = Partial<StoreStateType>;\r\n\r\nexport interface ActionObjectType extends Action {\r\n  type: ActionType;\r\n  payload: PayloadType;\r\n}\r\n\r\nexport function setArticlesPerPage(articlesPerPage: number): ActionObjectType {\r\n  return {\r\n    type: ActionType.UPDATE_DATA,\r\n    payload: {\r\n      [PropName.ARTICLES_PER_PAGE]: articlesPerPage\r\n    }\r\n  };\r\n}\r\n\r\nexport function setActivePageNo(activePageNo: number): ActionObjectType {\r\n  return {\r\n    type: ActionType.UPDATE_DATA,\r\n    payload: {\r\n      [PropName.ACTIVE_PAGE_NO]: activePageNo\r\n    }\r\n  };\r\n}\r\n\r\nexport function setArticleDataList(\r\n  articleDataList: ArticleDataType[]\r\n): ActionObjectType {\r\n  return {\r\n    type: ActionType.UPDATE_DATA,\r\n    payload: {\r\n      [PropName.ARTICLE_DATA_LIST]: articleDataList\r\n    }\r\n  };\r\n}\r\n","import React, { ChangeEvent } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { setArticlesPerPage } from './Actions';\r\nimport { PropName } from './Constant';\r\nimport { StoreStateType } from './Reducer';\r\n\r\nconst Menu: React.FC = () => {\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <div className=\"card m-2\">\r\n        <div className=\"card-header\">記事表示数</div>\r\n        <div className=\"card-body mx-auto\">\r\n          <MySelect />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card m-2\">\r\n        <div className=\"card-header\">このサイトを紹介する</div>\r\n        <div className=\"card-body mx-auto\">\r\n          <img src=\"qr.png\" alt=\"qrcode\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-auto\">\r\n        <Link to=\"/1\">\r\n          <img src=\"navigationj_home.png\" alt=\"top\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n\r\nconst optionDataList: number[] = [];\r\nfor (let i = 1; i <= 20; i++) {\r\n  optionDataList.push(i);\r\n}\r\n\r\nconst MySelect: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const articlesPerPage: number = useSelector<StoreStateType, number>(\r\n    state => state[PropName.ARTICLES_PER_PAGE]\r\n  );\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLSelectElement>): void => {\r\n    switch (e.target.name) {\r\n      case PropName.ARTICLES_PER_PAGE: {\r\n        dispatch(setArticlesPerPage(parseInt(e.target.value)));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <select\r\n      className=\"form-control form-control-lg\"\r\n      onChange={handleChange}\r\n      value={articlesPerPage}\r\n      name={PropName.ARTICLES_PER_PAGE}\r\n      id={PropName.ARTICLES_PER_PAGE}\r\n    >\r\n      {optionDataList.map(val => (\r\n        <option value={val} key={val}>\r\n          {val}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Link to=\"/1\">\r\n        <img src=\"top.png\" alt=\"top\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\ninterface PropType {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst MainWidthStyle: React.FC<PropType> = (props: PropType) => {\r\n  return (\r\n    <div className=\"mx-auto\" style={{ width: '600px' }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainWidthStyle;\r\n","import React from 'react';\r\nimport { ArticleDataType, PropName } from './Constant';\r\n\r\ninterface PropType {\r\n  [PropName.ARTICLE_DATA]: ArticleDataType;\r\n}\r\n\r\nconst Article: React.FC<PropType> = (props: PropType) => {\r\n  const embedcode: string = props[PropName.ARTICLE_DATA][PropName.EMBEDCODE];\r\n\r\n  return (\r\n    <div className=\"card m-2\">\r\n      <div className=\"card-body\">\r\n        <div\r\n          dangerouslySetInnerHTML={{\r\n            __html: embedcode\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { PropName } from './Constant';\r\nimport { StoreStateType } from './Reducer';\r\n\r\nconst PageNavigator: React.FC = () => {\r\n  const previousPageNo: number = useSelector<StoreStateType, number>(\r\n    state => state[PropName.PREVIOUS_PAGE_NO]\r\n  );\r\n\r\n  const nextPageNo: number = useSelector<StoreStateType, number>(\r\n    state => state[PropName.NEXT_PAGE_NO]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"mx-auto fixed-bottom p-2 d-flex justify-content-around\"\r\n        style={{ width: 'inherit' }}\r\n      >\r\n        <div>\r\n          <Link to={`${previousPageNo}`}>\r\n            <img src=\"navigationj_prev.png\" alt=\"prev\" />\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"d-flex flex-column justify-content-end\">\r\n          <Link to={`/menu`}>\r\n            <img\r\n              className=\"border border-secondary rounded\"\r\n              src=\"justify.svg\"\r\n              alt=\"\"\r\n              width=\"72\"\r\n              height=\"72\"\r\n            />\r\n          </Link>\r\n        </div>\r\n\r\n        <div>\r\n          <Link to={`${nextPageNo}`}>\r\n            <img src=\"navigationj_next.png\" alt=\"next\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: '112px' }}>\r\n        {\r\n          //float margin\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageNavigator;\r\n","export default class Utils {\r\n  public static scrollToTop(): void {\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  public static scrollToElement(id: string): void {\r\n    const element: HTMLElement | null = document.getElementById(id);\r\n    if (element != null) {\r\n      element.scrollIntoView(true);\r\n    }\r\n  }\r\n\r\n  public static setTitle(title: string): void {\r\n    document.title = title;\r\n  }\r\n\r\n  public static sendAccessLog(path: string): void {\r\n    // for Google Analytics\r\n    // index.htmlで定義している関数\r\n    // HACK\r\n    try {\r\n      (window as any).sendAccessLog(path);\r\n    } catch (error) {\r\n      console.log('sendAccessLogError');\r\n    }\r\n  }\r\n\r\n  public static loadTwitter(): void {\r\n    // for twitter\r\n    // index.htmlで定義している関数\r\n    // HACK\r\n    try {\r\n      (window as any).twttr.widgets.load();\r\n    } catch (error) {\r\n      console.log('loadTwitterError');\r\n    }\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setActivePageNo } from './Actions';\r\nimport Article from './Article';\r\nimport { ArticleDataType, PropName } from './Constant';\r\nimport PageNavigator from './PageNavigator';\r\nimport { StoreStateType } from './Reducer';\r\nimport Utils from './Utils';\r\n\r\ninterface RouterParamType {\r\n  [PropName.ACTIVE_PAGE_NO]: string;\r\n}\r\n\r\nconst NewArticles: React.FC = () => {\r\n  const activePageNo = parseInt(\r\n    useParams<RouterParamType>()[PropName.ACTIVE_PAGE_NO]\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    Utils.scrollToTop();\r\n    Utils.setTitle(`zoo zoo town - page ${activePageNo}`);\r\n    Utils.sendAccessLog(window.location.pathname + window.location.hash);\r\n    dispatch(setActivePageNo(activePageNo));\r\n  }, [activePageNo, dispatch]);\r\n\r\n  const activeDataList: ArticleDataType[] = useSelector<\r\n    StoreStateType,\r\n    ArticleDataType[]\r\n  >(state => state[PropName.ACTIVE_ARTICLE_DATA_LIST]);\r\n\r\n  useEffect(Utils.loadTwitter, [activeDataList]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-column align-items-center\">\r\n        {activeDataList.map((articleData, index) => (\r\n          <Article articleData={articleData} key={index} />\r\n        ))}\r\n      </div>\r\n      <PageNavigator />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewArticles;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { setArticleDataList } from './Actions';\r\nimport { ArticleDataType, ARTICLE_DATA_URL, PropName } from './Constant';\r\nimport Header from './Header';\r\nimport MainWidthStyle from './MainWidthStyle';\r\nimport Menu from './Menu';\r\nimport NewArticles from './NewArticles';\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log('fetch');\r\n    fetch(ARTICLE_DATA_URL)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        const articleDataList: ArticleDataType[] = [];\r\n        for (const item of json.feed.entry) {\r\n          const articleData: ArticleDataType = {\r\n            [PropName.EMBEDCODE]: item[`gsx$${[PropName.EMBEDCODE]}`].$t\r\n          };\r\n          articleDataList.push(articleData);\r\n        }\r\n        articleDataList.reverse(); // 新しいもの順に並べ替える\r\n        dispatch(setArticleDataList(articleDataList));\r\n      });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <MainWidthStyle>\r\n        <Header />\r\n      </MainWidthStyle>\r\n\r\n      <section id=\"main\">\r\n        <MainWidthStyle>\r\n          <Switch>\r\n            <Route exact path={`/menu`} component={Menu} />\r\n            <Route\r\n              exact\r\n              path={`/:${PropName.ACTIVE_PAGE_NO}`}\r\n              component={NewArticles}\r\n            />\r\n            // 上記のパスに一致しないものは1ページ目にとばす\r\n            <Route render={(): JSX.Element => <Redirect to=\"/1\" />} />\r\n          </Switch>\r\n        </MainWidthStyle>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const FIRST_PAGE_NO: number = 1;\r\n\r\nexport interface PageManager {\r\n  getPreviousPageNo(): number;\r\n  getActivePageNo(): number;\r\n  getNextPageNo(): number;\r\n  getLastPageNo(): number;\r\n  getArticlesPerPage(): number;\r\n  getActivePageFirstDataIndex(): number;\r\n  getActivePageLastDataIndex(): number;\r\n}\r\n\r\nexport class PageManagerFactory {\r\n  static newDefaultPageManager(\r\n    articleDataListSize: number,\r\n    articlesPerPage: number,\r\n    activePageNo: number\r\n  ): PageManager {\r\n    return PageManagerFactory.newLoopPageManager(\r\n      articleDataListSize,\r\n      articlesPerPage,\r\n      activePageNo\r\n    );\r\n  }\r\n\r\n  static newNormalPageManager(\r\n    articleDataListSize: number,\r\n    articlesPerPage: number,\r\n    activePageNo: number\r\n  ): PageManager {\r\n    return new NormalPageManager(\r\n      articleDataListSize,\r\n      articlesPerPage,\r\n      activePageNo\r\n    );\r\n  }\r\n\r\n  static newLoopPageManager(\r\n    articleDataListSize: number,\r\n    articlesPerPage: number,\r\n    activePageNo: number\r\n  ): PageManager {\r\n    return new LoopPageManager(\r\n      articleDataListSize,\r\n      articlesPerPage,\r\n      activePageNo\r\n    );\r\n  }\r\n}\r\n\r\nclass NormalPageManager implements PageManager {\r\n  constructor(\r\n    private articleDataListSize: number,\r\n    private articlesPerPage: number,\r\n    private activePageNo: number\r\n  ) {}\r\n\r\n  protected correctPageNo(pageNo: number): number {\r\n    const lastPageNo: number = this.getLastPageNo();\r\n\r\n    if (pageNo < FIRST_PAGE_NO) {\r\n      // 下限\r\n      return FIRST_PAGE_NO;\r\n    } else if (lastPageNo < pageNo) {\r\n      // 上限\r\n      return lastPageNo;\r\n    } else {\r\n      // 正常値\r\n      return pageNo;\r\n    }\r\n  }\r\n\r\n  getPreviousPageNo(): number {\r\n    return this.correctPageNo(this.activePageNo - 1);\r\n  }\r\n\r\n  getActivePageNo(): number {\r\n    return this.correctPageNo(this.activePageNo);\r\n  }\r\n\r\n  getNextPageNo(): number {\r\n    return this.correctPageNo(this.activePageNo + 1);\r\n  }\r\n\r\n  getLastPageNo(): number {\r\n    if (this.articleDataListSize === 0) {\r\n      return 1;\r\n    }\r\n    return Math.ceil(this.articleDataListSize / this.getArticlesPerPage());\r\n  }\r\n\r\n  getArticlesPerPage(): number {\r\n    const articlesPerPage: number = this.articlesPerPage;\r\n\r\n    if (articlesPerPage < 1) {\r\n      // 下限\r\n      return 1;\r\n    } else if (20 < articlesPerPage) {\r\n      // 上限\r\n      return 20;\r\n    } else {\r\n      // 正常値\r\n      return articlesPerPage;\r\n    }\r\n  }\r\n\r\n  getActivePageFirstDataIndex(): number {\r\n    return (this.getActivePageNo() - 1) * this.getArticlesPerPage();\r\n  }\r\n\r\n  getActivePageLastDataIndex(): number {\r\n    return this.getActivePageFirstDataIndex() + this.getArticlesPerPage();\r\n  }\r\n}\r\n\r\nclass LoopPageManager extends NormalPageManager {\r\n  protected correctPageNo(pageNo: number): number {\r\n    const lastPageNo: number = this.getLastPageNo();\r\n\r\n    if (pageNo < FIRST_PAGE_NO) {\r\n      // 下限\r\n      return (pageNo % lastPageNo) + lastPageNo;\r\n    } else if (lastPageNo < pageNo) {\r\n      // 上限\r\n      const result = pageNo % lastPageNo;\r\n      if (result === 0) {\r\n        return FIRST_PAGE_NO;\r\n      }\r\n      return result;\r\n    } else {\r\n      // 正常値\r\n      return pageNo;\r\n    }\r\n  }\r\n}\r\n","import { ActionObjectType, ActionType, PayloadType } from './Actions';\r\nimport {\r\n  ArticleDataType,\r\n  HTTPS_YOUTUBE_URL,\r\n  HTTP_YOUTUBE_URL,\r\n  PropName\r\n} from './Constant';\r\nimport { PageManager, PageManagerFactory } from './PageManager';\r\n\r\nexport interface StoreStateType {\r\n  [PropName.ACTIVE_PAGE_NO]: number;\r\n  [PropName.PREVIOUS_PAGE_NO]: number;\r\n  [PropName.NEXT_PAGE_NO]: number;\r\n  [PropName.ARTICLES_PER_PAGE]: number;\r\n  [PropName.ARTICLE_DATA_LIST]: ArticleDataType[];\r\n  [PropName.ACTIVE_ARTICLE_DATA_LIST]: ArticleDataType[];\r\n}\r\n\r\nconst INITIAL_STATE: StoreStateType = {\r\n  [PropName.ACTIVE_PAGE_NO]: 1,\r\n  [PropName.PREVIOUS_PAGE_NO]: 1,\r\n  [PropName.NEXT_PAGE_NO]: 1,\r\n  [PropName.ARTICLES_PER_PAGE]: 5,\r\n  [PropName.ARTICLE_DATA_LIST]: [],\r\n  [PropName.ACTIVE_ARTICLE_DATA_LIST]: []\r\n};\r\n\r\nexport default function Reducer(\r\n  state = INITIAL_STATE,\r\n  action: ActionObjectType\r\n): StoreStateType {\r\n  switch (action.type) {\r\n    case ActionType.UPDATE_DATA: {\r\n      return new StateBuilder(state, action.payload).build();\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nclass StateBuilder {\r\n  private state: StoreStateType;\r\n  private changedPropNames: Set<string>;\r\n\r\n  constructor(state: StoreStateType, payload: PayloadType) {\r\n    this.state = { ...state, ...payload };\r\n\r\n    this.changedPropNames = new Set(Object.keys(payload));\r\n  }\r\n\r\n  build(): StoreStateType {\r\n    const articleDataList: ArticleDataType[] = this.state[\r\n      PropName.ARTICLE_DATA_LIST\r\n    ].filter(removeEmptyDataFilter);\r\n\r\n    const pageManager: PageManager = PageManagerFactory.newDefaultPageManager(\r\n      articleDataList.length,\r\n      this.state[PropName.ARTICLES_PER_PAGE],\r\n      this.state[PropName.ACTIVE_PAGE_NO]\r\n    );\r\n\r\n    // fetchされる前はarticleDataListが空なのでpageManagerを使用するとページが0になる\r\n    // this.state[PropName.ACTIVE_PAGE_NO] = pageManager.getActivePageNo();\r\n\r\n    this.state[PropName.PREVIOUS_PAGE_NO] = pageManager.getPreviousPageNo();\r\n    this.state[PropName.NEXT_PAGE_NO] = pageManager.getNextPageNo();\r\n    this.state[PropName.ARTICLES_PER_PAGE] = pageManager.getArticlesPerPage();\r\n    this.state[PropName.ARTICLE_DATA_LIST] = articleDataList;\r\n    this.state[PropName.ACTIVE_ARTICLE_DATA_LIST] = articleDataList\r\n      .slice(\r\n        pageManager.getActivePageFirstDataIndex(),\r\n        pageManager.getActivePageLastDataIndex()\r\n      )\r\n      .map(httpToHttpsMapper);\r\n\r\n    return this.state;\r\n  }\r\n}\r\n\r\nfunction removeEmptyDataFilter(articleData: ArticleDataType): boolean {\r\n  return articleData[PropName.EMBEDCODE] !== '';\r\n}\r\n\r\n// 埋め込みコード内のURLがhttpになっているのでエラー防止のためにhttpsに置換する\r\nfunction httpToHttpsMapper(articleData: ArticleDataType): ArticleDataType {\r\n  let newArticleData: ArticleDataType = { ...articleData }; //deep copy\r\n  newArticleData[PropName.EMBEDCODE] = newArticleData[\r\n    PropName.EMBEDCODE\r\n  ].replace(HTTP_YOUTUBE_URL, HTTPS_YOUTUBE_URL);\r\n  return newArticleData;\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport App from './App';\r\nimport { PropName } from './Constant';\r\nimport './index.css';\r\nimport Reducer from './Reducer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: [PropName.ARTICLES_PER_PAGE]\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, Reducer);\r\n\r\n// HACK\r\nconst store = createStore(\r\n  persistedReducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nconst pstore = persistStore(store as any);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={<p>loading...</p>} persistor={pstore}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}